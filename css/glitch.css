/**
 * Solo Leveling System - Glitch Effects
 * Anime-style glitch animations and visual effects
 */

/* Glitch Text Effect */
.glitch-text {
  position: relative;
  font-weight: 900;
  text-transform: uppercase;
  letter-spacing: 2px;
  animation: glitch-main 2s infinite;
}

.glitch-text::before,
.glitch-text::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  clip: rect(0, 900px, 0, 0);
}

.glitch-text::before {
  animation: glitch-before 3s infinite linear alternate-reverse;
  color: #ff0040;
  text-shadow: -2px 0 #ff0040;
  z-index: -1;
}

.glitch-text::after {
  animation: glitch-after 2s infinite linear alternate-reverse;
  color: #00ffff;
  text-shadow: 2px 0 #00ffff;
  z-index: -2;
}

@keyframes glitch-main {
  0%, 92%, 100% {
    transform: translate(0);
    filter: hue-rotate(0deg);
  }
  1%, 2% {
    transform: translate(-2px, 2px);
    filter: hue-rotate(90deg);
  }
  3%, 4% {
    transform: translate(-1px, -1px);
    filter: hue-rotate(180deg);
  }
  5%, 6% {
    transform: translate(1px, 1px);
    filter: hue-rotate(270deg);
  }
  7%, 8% {
    transform: translate(-1px, 1px);
    filter: hue-rotate(360deg);
  }
  9%, 10% {
    transform: translate(2px, -2px);
    filter: hue-rotate(0deg);
  }
}

@keyframes glitch-before {
  0%, 2%, 64% {
    clip: rect(42px, 9999px, 44px, 0);
    transform: skew(0.3deg);
  }
  4%, 60% {
    clip: rect(12px, 9999px, 59px, 0);
    transform: skew(0.1deg);
  }
  62% {
    clip: rect(18px, 9999px, 34px, 0);
    transform: skew(0.5deg);
  }
}

@keyframes glitch-after {
  0%, 15%, 65% {
    clip: rect(25px, 9999px, 99px, 0);
    transform: skew(-0.2deg);
  }
  20%, 60% {
    clip: rect(69px, 9999px, 6px, 0);
    transform: skew(0.4deg);
  }
  35% {
    clip: rect(79px, 9999px, 12px, 0);
    transform: skew(-0.3deg);
  }
}

/* Glitch Button Effects */
.glitch-btn {
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;
}

.glitch-btn::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, 
    transparent, 
    rgba(255, 255, 255, 0.1), 
    rgba(0, 212, 255, 0.3),
    rgba(255, 255, 255, 0.1), 
    transparent);
  transition: left 0.5s ease;
  z-index: 1;
}

.glitch-btn:hover::before {
  left: 100%;
}

.glitch-btn:active {
  animation: btnGlitch 0.3s ease;
}

@keyframes btnGlitch {
  0%, 100% { transform: translate(0); }
  20% { transform: translate(-1px, 1px); }
  40% { transform: translate(1px, -1px); }
  60% { transform: translate(-1px, -1px); }
  80% { transform: translate(1px, 1px); }
}

/* System Modal Glitch Effects */
.glitch-accept {
  animation: acceptGlitch 2s ease;
}

.glitch-decline {
  animation: declineGlitch 1.5s ease;
}

@keyframes acceptGlitch {
  0% { 
    transform: scale(1);
    filter: hue-rotate(0deg) brightness(1);
  }
  25% {
    transform: scale(1.02) skew(0.5deg);
    filter: hue-rotate(90deg) brightness(1.2);
  }
  50% {
    transform: scale(0.98) skew(-0.3deg);
    filter: hue-rotate(180deg) brightness(0.8);
  }
  75% {
    transform: scale(1.01) skew(0.2deg);
    filter: hue-rotate(270deg) brightness(1.1);
  }
  100% {
    transform: scale(1);
    filter: hue-rotate(360deg) brightness(1);
    opacity: 0;
  }
}

@keyframes declineGlitch {
  0% { 
    transform: scale(1);
    filter: brightness(1) contrast(1);
  }
  20% {
    transform: scale(0.95) rotateX(5deg);
    filter: brightness(0.5) contrast(2);
  }
  40% {
    transform: scale(1.05) rotateX(-3deg);
    filter: brightness(1.5) contrast(0.5);
  }
  60% {
    transform: scale(0.9) rotateY(5deg);
    filter: brightness(0.3) contrast(3);
  }
  80% {
    transform: scale(1.1) rotateY(-5deg);
    filter: brightness(2) contrast(0.2);
  }
  100% {
    transform: scale(0);
    filter: brightness(0) contrast(0);
    opacity: 0;
  }
}

/* Screen Tear Effect */
.screen-tear {
  position: relative;
  overflow: hidden;
}

.screen-tear::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(90deg,
    transparent 0%,
    rgba(255, 0, 64, 0.1) 2%,
    transparent 4%,
    transparent 48%,
    rgba(0, 255, 255, 0.1) 50%,
    transparent 52%,
    transparent 98%,
    rgba(255, 255, 0, 0.1) 100%
  );
  animation: screenTear 0.1s infinite;
  pointer-events: none;
  z-index: 10;
}

@keyframes screenTear {
  0% { transform: translateX(0); }
  100% { transform: translateX(100px); }
}

/* Digital Distortion */
.digital-distortion {
  position: relative;
}

.digital-distortion::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: repeating-linear-gradient(
    0deg,
    transparent,
    transparent 2px,
    rgba(0, 212, 255, 0.03) 2px,
    rgba(0, 212, 255, 0.03) 4px
  );
  animation: scanlines 2s linear infinite;
  pointer-events: none;
  z-index: 1;
}

@keyframes scanlines {
  0% { transform: translateY(0); }
  100% { transform: translateY(4px); }
}

/* Hologram Effect */
.hologram {
  position: relative;
  background: linear-gradient(135deg, 
    rgba(0, 212, 255, 0.1) 0%,
    rgba(0, 212, 255, 0.05) 50%,
    rgba(0, 212, 255, 0.1) 100%
  );
  border: 1px solid rgba(0, 212, 255, 0.3);
  backdrop-filter: blur(10px);
  animation: hologramFlicker 3s ease-in-out infinite;
}

.hologram::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(45deg,
    transparent 40%,
    rgba(255, 255, 255, 0.1) 50%,
    transparent 60%
  );
  animation: hologramSweep 4s ease-in-out infinite;
  pointer-events: none;
}

@keyframes hologramFlicker {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.8; }
  55% { opacity: 1; }
  57% { opacity: 0.9; }
  60% { opacity: 1; }
}

@keyframes hologramSweep {
  0% { transform: translateX(-100%) skewX(-15deg); }
  25% { transform: translateX(100%) skewX(-15deg); }
  26%, 100% { transform: translateX(100%) skewX(-15deg); }
}

/* Matrix Rain Effect */
.matrix-rain {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1;
  overflow: hidden;
}

.matrix-column {
  position: absolute;
  top: -100%;
  width: 20px;
  height: 100%;
  background: linear-gradient(
    to bottom,
    transparent,
    var(--primary-color),
    transparent
  );
  animation: matrixFall linear infinite;
  opacity: 0.3;
}

@keyframes matrixFall {
  to { transform: translateY(100vh); }
}

/* Glitch Overlay */
.glitch-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg,
    transparent 0%,
    rgba(255, 0, 64, 0.02) 25%,
    transparent 25.1%,
    transparent 49.9%,
    rgba(0, 255, 255, 0.02) 50%,
    transparent 50.1%,
    transparent 74.9%,
    rgba(255, 255, 0, 0.02) 75%,
    transparent 75.1%,
    transparent 100%
  );
  animation: glitchOverlay 0.2s infinite;
  pointer-events: none;
  z-index: 100;
  mix-blend-mode: overlay;
}

@keyframes glitchOverlay {
  0% { transform: translateX(0); }
  10% { transform: translateX(-2px); }
  20% { transform: translateX(2px); }
  30% { transform: translateX(-1px); }
  40% { transform: translateX(1px); }
  50% { transform: translateX(-1px); }
  60% { transform: translateX(1px); }
  70% { transform: translateX(-2px); }
  80% { transform: translateX(2px); }
  90% { transform: translateX(-1px); }
  100% { transform: translateX(0); }
}

/* RGB Split Effect */
.rgb-split {
  position: relative;
  animation: rgbSplit 1s ease infinite;
}

@keyframes rgbSplit {
  0%, 90%, 100% {
    text-shadow: 0 0 0 transparent;
  }
  91%, 94% {
    text-shadow: 
      -1px 0 0 #ff0040,
      1px 0 0 #00ffff;
  }
  95%, 98% {
    text-shadow: 
      -2px 0 0 #ff0040,
      2px 0 0 #00ffff;
  }
}

/* Data Stream Effect */
.data-stream {
  position: relative;
  overflow: hidden;
}

.data-stream::before {
  content: '010110100101101001011010010110100101101001';
  position: absolute;
  top: 0;
  left: -100%;
  width: 200%;
  height: 100%;
  font-family: 'Courier New', monospace;
  font-size: 0.5rem;
  color: var(--primary-color);
  opacity: 0.3;
  line-height: 1.2;
  animation: dataFlow 10s linear infinite;
  pointer-events: none;
  z-index: -1;
}

@keyframes dataFlow {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

/* Circuit Board Pattern */
.circuit-pattern {
  position: relative;
  background-image: 
    linear-gradient(90deg, rgba(0, 212, 255, 0.1) 1px, transparent 1px),
    linear-gradient(rgba(0, 212, 255, 0.1) 1px, transparent 1px);
  background-size: 20px 20px;
  animation: circuitPulse 4s ease-in-out infinite;
}

@keyframes circuitPulse {
  0%, 100% { opacity: 0.3; }
  50% { opacity: 0.6; }
}

/* Power-up Effect */
.power-up {
  animation: powerUp 1s ease-out;
}

@keyframes powerUp {
  0% {
    transform: scale(0.8);
    opacity: 0;
    filter: brightness(0.5);
  }
  50% {
    transform: scale(1.1);
    opacity: 0.8;
    filter: brightness(1.5);
  }
  100% {
    transform: scale(1);
    opacity: 1;
    filter: brightness(1);
  }
}

/* System Shutdown Effect */
.system-shutdown {
  animation: systemShutdown 2s ease-in-out forwards;
}

@keyframes systemShutdown {
  0% {
    transform: scale(1);
    opacity: 1;
    filter: brightness(1);
  }
  25% {
    transform: scale(1.02);
    opacity: 0.8;
    filter: brightness(1.2);
  }
  50% {
    transform: scale(0.98);
    opacity: 0.6;
    filter: brightness(0.8);
  }
  75% {
    transform: scale(0.95);
    opacity: 0.3;
    filter: brightness(0.5);
  }
  100% {
    transform: scale(0.9);
    opacity: 0;
    filter: brightness(0);
  }
}

/* Critical Error Effect */
.critical-error {
  animation: criticalError 0.5s ease-in-out infinite;
  border-color: #ff0040 !important;
  box-shadow: 0 0 20px #ff0040 !important;
}

@keyframes criticalError {
  0%, 100% {
    opacity: 1;
    transform: scale(1);
  }
  50% {
    opacity: 0.7;
    transform: scale(1.02);
  }
}

/* Loading Dots */
.loading-dots::after {
  content: '';
  animation: loadingDots 1.5s infinite;
}

@keyframes loadingDots {
  0%, 20% { content: ''; }
  25%, 45% { content: '.'; }
  50%, 70% { content: '..'; }
  75%, 95% { content: '...'; }
}

/* Reduced motion alternatives */
@media (prefers-reduced-motion: reduce) {
  .glitch-text,
  .glitch-text::before,
  .glitch-text::after {
    animation: none;
  }
  
  .glitch-text {
    text-shadow: 1px 1px 2px var(--primary-color);
  }
  
  .screen-tear::before,
  .digital-distortion::after,
  .matrix-column,
  .glitch-overlay {
    animation: none;
    display: none;
  }
  
  .hologram {
    animation: none;
    opacity: 1;
  }
}
